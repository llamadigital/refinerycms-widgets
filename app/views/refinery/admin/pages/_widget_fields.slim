.widget data-sort-item='widget' class=('locked' if f.object.locked?)
  .banner
    .left
      span.handle title="Reorder"
        = refinery_icon_tag('arrow_switch')
      span.type
        = f.object.ultimate_widget_type.name if f.object.widget_type
        - if f.object.times_used > 1
          span.sub-title style = 'margin-left: 20px;' Used in #{pluralize (f.object.times_used-1), 'other place'}
    .right 
      .icons
        - if f.object.locked?
          span title = 'Locked'
            = refinery_icon_tag('lock')
        - else
          = f.label :display, :class => 'inline'
          = f.check_box :display, :class => 'checkbox'
          = content_tag(:a, refinery_icon_tag('edit'), class: 'edit-widget',
            title: 'Edit widget') unless local_assigns.has_key?(:mode) && mode == 'edit'
          = content_tag(:a, refinery_icon_tag('bin_closed'), class: 'remove-widget',
            title: 'Remove widget')
        = content_tag(:a, refinery_icon_tag('zoom'), class: 'toggle-widget', title: 'Toggle details')
  .inner.clear style="margin-top:40px; #{'display:none;' if f.object.locked?}"
    .previewing style=("display:none;" if local_assigns.has_key?(:mode) && mode == 'edit')
      = f.fields_for f.object.widget_type.association_name do |j|
        = render "refinery/widgets/admin/widgets/#{f.object.widget_type.admin_preview_partial}", :f => j

    .editing style=("display:none;" unless local_assigns.has_key?(:mode) && mode == 'edit')
      .clear
        = f.hidden_field :sub_type
        = f.hidden_field :_destroy, 'data-meta' => 'destroy'
        = f.hidden_field :position, 'data-meta' => 'position'
        = f.hidden_field :widget_id
        = f.hidden_field :locked
        = f.hidden_field :layout


      = f.fields_for f.object.widget_type.association_name do |j|
        = render "refinery/widgets/admin/widgets/#{f.object.widget_type.admin_partial}", :f => j

      - if f.object.locked?
        = f.hidden_field :name
      - else
        .row.field.l-top-margin.m-bottom-margin data-disabled-container = true
          .col-4
            = f.check_box :reuse, :class => 'checkbox', 'data-disabled-master' => true
            = f.label :reuse, nil, :class => 'inline'
          .col-8
            = f.label :name, nil, :class => 'inline'
            - if f.object.reuse?
              = f.text_field :name, 'data-disabled-slave' => true
            - else
              = f.text_field :name, :disabled => true, 'data-disabled-slave' => true
  .clear
    
